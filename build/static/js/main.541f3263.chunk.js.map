{"version":3,"sources":["BooksAPI.js","components/ShelfOptions.js","components/Book.js","components/SearchBar.js","components/SearchPage.js","components/Shelf.js","shared/ShelfTypes.js","components/BookShelfs.js","components/DisplayMyReads.js","components/MainPage.js","App.js","index.js"],"names":["api","token","localStorage","Math","random","toString","substr","headers","Accept","Authorization","getAll","fetch","concat","then","res","json","data","books","ShelfSelector","_ref","book","update","react_default","a","createElement","value","shelf","onChange","e","target","disabled","Book","key","id","className","style","width","height","backgroundImage","imageLinks","thumbnail","src","alt","title","name","ShelfOptions","authors","SearchBar","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","query","handleChange","bind","assertThisInitialized","triggerUpdate","time","clearTimeout","setState","setTimeout","updateQuery","react_router_dom","to","type","placeholder","Component","SearchPage","console","log","updateResult","result","_this2","method","objectSpread","Content-Type","body","JSON","stringify","results","error","_this3","components_SearchBar","map","components_Book","Shelf","filter","CURRENTLY_READING","WANT_TO_READ","READ","BookShelfs","components_Shelf","ShelfTypes","DisplayMyReads","components_BookShelfs","Main","updateBook","BooksAPI","d","_this4","react_router","path","component","components_SearchPage","components_DisplayMyReads","React","BooksApp","MainPage","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.541f3263.chunk.js","sourcesContent":["\nconst api = \"https://reactnd-books-api.udacity.com\"\n\n\n// Generate a unique token for storing your bookshelf data on the backend server.\nlet token = localStorage.token\nif (!token)\n  token = localStorage.token = Math.random().toString(36).substr(-8)\n\nconst headers = {\n  'Accept': 'application/json',\n  'Authorization': token\n}\n\nexport const get = (bookId) =>\n  fetch(`${api}/books/${bookId}`, { headers })\n    .then(res => res.json())\n    .then(data => data.book)\n\nexport const getAll = () =>\n  fetch(`${api}/books`, { headers })\n    .then(res => res.json())\n    .then(data => data.books)\n\nexport const update = (book, shelf) =>\n  fetch(`${api}/books/${book.id}`, {\n    method: 'PUT',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ shelf })\n  }).then(res => {\n      let d = res.json();\n      console.log(d);\n      return d; \n    })\n\nexport const search = (query) =>\n  fetch(`${api}/search`, {\n    method: 'POST',\n    headers: {\n      ...headers,\n      'Content-Type': 'application/json'\n    },\n    body: JSON.stringify({ query })\n  }).then(res => res.json())\n    .then(data => data.books)\n","import React from 'react';\n\n\nfunction ShelfSelector({book, update}) {\n    return(\n      <select value={book.shelf || 'none'} onChange={(e) => update(book, e.target.value)}>\n        <option value=\"move\" disabled>Move to...</option>\n        <option value=\"currentlyReading\" >Currently Reading</option>\n        <option value=\"wantToRead\" >Want to Read</option>\n        <option value=\"read\" >Read</option>\n        <option value=\"none\">None</option>\n      </select>\n    );\n}\n\nexport default ShelfSelector;","import React from \"react\";\nimport ShelfOptions  from \"./ShelfOptions\";\n\nfunction Book({book, update}) {\n  return(\n      <li key={book.id}>\n        <div className=\"book\">\n          <div className=\"book-top\">\n            <div className=\"book-cover\" style={{ width: 128, height: 193, backgroundImage: book.imageLinks.thumbnail }}>\n              <img src={book.imageLinks.thumbnail} alt={book.title} name={book.title} width=\"128px\" height=\"193px\" />\n            </div>\n            <div className=\"book-shelf-changer\">\n              <ShelfOptions book={book} update={update} />\n            </div>\n          </div>\n          <div className=\"book-title\">{book.title}</div>\n          <div className=\"book-authors\">{book.authors}</div>\n        </div>\n      </li>\n  );\n};\n\nexport default Book;\n\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\n\nconst WAIT_INTERVAL = 1000;\n\nclass SearchBar extends Component {\n    constructor(props){\n        super(props);\n    \n        this.state= {\n          query: ''\n        };\n    \n        this.handleChange = this.handleChange.bind(this);\n        this.triggerUpdate = this.triggerUpdate.bind(this);\n      }\n    \n      componentWillMount() {\n        this.time = null;\n      }\n    \n      handleChange({target: {value: query}}) {\n        clearTimeout(this.time);\n    \n        this.setState({query}) // same as setState({query: query})\n        this.time = setTimeout(this.triggerUpdate, WAIT_INTERVAL);\n      }\n    \n      triggerUpdate() {\n        let { query } = this.state;\n        this.props.updateQuery(query);\n      }\n    \n      render(){\n        return(\n            <div className=\"search-books-bar\">\n              <Link to=\"/\">\n                <button className=\"close-search\">Close</button>\n              </Link>\n              <div className=\"search-books-input-wrapper\">\n              {/*\n                NOTES: The search from BooksAPI is limited to a particular set of search terms.\n                You can find these search terms here:\n                https://github.com/udacity/reactnd-project-myreads-starter/blob/master/SEARCH_TERMS.md\n    \n                However, remember that the BooksAPI.search method DOES search by title or author. So, don't worry if\n                you don't find a specific author or title. Every search is limited by search terms.\n              */}\n                <input type=\"text\" id=\"searchTxt\" value={this.state.query} onChange={this.handleChange}\n                  placeholder=\"Search by title or author\" />\n              </div>\n            </div>\n          )\n      }\n}\n\nexport default SearchBar;","import React, {Component} from 'react';\nimport * as BooksAPI from '../BooksAPI'\nimport Book  from \"./Book\";\nimport SearchBar from \"./SearchBar\";\n\nclass SearchPage extends Component {\n\n  constructor(props){\n      super(props);\n\n      this.state = {\n        query: '',\n        result: []\n      }\n\n      this.updateQuery = this.updateQuery.bind(this);\n  }\n\n  updateQuery = (query) => {\n    console.log('updating query....')\n    this.setState( {query}, () => {\n      console.log(this.state);\n      this.updateResult();\n    });\n  }\n\n  updateResult() {\n    console.log('updating query....')\n    if (this.state.query){\n      BooksAPI.search(this.state.query).then(results => {\n        if(results.error){\n          return this.setState({result:[]});\n        }\n        else{\n          return this.setState({result: results});\n        }\n      })\n    }\n    else{\n      this.setState({result:[]});\n    }\n    console.log('updated result', this.state.result)\n  }\n\n  \n  render() {\n    const ShowCase = () => {\n      return(\n        <ol className=\"books-grid\">      \n          { this.state.result.map((book) => <Book book={book} update={this.props.update}/> )}\n        </ol>\n      )\n    };\n\n    return (\n      <div className=\"search-books\">\n        <SearchBar updateQuery={this.updateQuery}/>\n\n        <div className=\"search-books-results\">\n          <ShowCase />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default SearchPage;","import React from 'react';\nimport Book from './Book'\n\nfunction Shelf({books, shelf, update}) {\n    console.log('shelf',shelf)\n    if (books) {\n      console.log('books',books)\n      console.log('shelf',shelf)\n  \n        return (\n          <div className=\"bookshelf-books\">\n            <ol className=\"books-grid\">\n              {books.filter((book)=> book.shelf === shelf)\n                    .map((book) => <Book book={book} update={update}/>)\n              }\n            </ol>\n          </div>\n        )\n    }\n    else {\n        return (\n            <div></div>\n        );\n    }\n  };\n\n  export default Shelf;","export const CURRENTLY_READING = \"currentlyReading\"; \nexport const WANT_TO_READ = \"wantToRead\"; \nexport const READ = \"read\";\nexport const NONE = \"None\"; \n","import React from 'react';\nimport Shelf from './Shelf';\nimport * as ShelfTypes from '../shared/ShelfTypes';\n\n\n\n\nfunction BookShelfs(props){\n  return (\n    <div>\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Currently Reading</h2>\n          <Shelf books={props.books} shelf={ShelfTypes.CURRENTLY_READING} update={props.update} />\n          \n        </div> \n\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Want to Read</h2>\n          <Shelf books={props.books} shelf={ShelfTypes.WANT_TO_READ} update={props.update} />\n        </div>\n\n        <div className=\"bookshelf\">\n          <h2 className=\"bookshelf-title\">Read</h2>\n          <Shelf books={props.books} shelf={ShelfTypes.READ} update={props.update} />\n        </div>\n    </div>\n  );\n}\n\n\nexport default BookShelfs;","import React from 'react';\nimport BookShelfs from './BookShelfs';\nimport { Link } from 'react-router-dom';\n\n\nfunction DisplayMyReads(props) {\n\n    return (\n        <div className=\"list-books\">\n            <div className=\"list-books-title\">\n                <h1>MyReads</h1>\n            </div>\n            <div className=\"list-books-content\">\n                <BookShelfs books={props.books} update={props.update}/>\n            </div>\n            <div className=\"open-search\">\n                <Link to=\"/search\">\n                    <button>Add a book</button>\n                </Link>\n            </div>\n        </div>\n    );\n\n}\n\nexport default DisplayMyReads;","import React from 'react'\nimport * as BooksAPI from '../BooksAPI'\nimport SearchPage from './SearchPage';\nimport DisplayMyReads from './DisplayMyReads';\nimport { Switch, Route, Redirect } from 'react-router-dom';\nimport '../App.css'\n\nclass Main extends React.Component {\n  \n  constructor(props){\n    super(props);\n\n    this.state = {\n      books: []\n    };\n\n    this.updateBook = this.updateBook.bind(this);\n  };\n \n\n  \n\n  componentDidMount() {\n\n    console.log(this.state.books)\n    BooksAPI.getAll().then(results =>{\n        this.setState({books: results});\n      });\n    console.log('main', this.state.books);\n\n  };\n\n  updateBook(book, shelf) {\n    BooksAPI.update(book, shelf).then(() =>{\n      book.shelf = shelf;\n      BooksAPI.getAll().then(results =>{\n        this.setState({books: results});\n      });\n    });\n  };\n\n  render() {\n    return (\n      <Switch>\n        <Route path=\"/search\" component={ () => <SearchPage update={this.updateBook} />} />\n        <Route path=\"/\" component={ () => <DisplayMyReads books={this.state.books} update={this.updateBook}/>} /> \n        <Redirect to=\"/\" />\n        \n      </Switch>\n    )\n  }\n}\n\nexport default Main;","import React from 'react'\nimport { BrowserRouter } from 'react-router-dom';\nimport Main from \"./components/MainPage\";\n\n\nclass BooksApp extends React.Component {\n  \n  render() {\n    return (\n\n      <BrowserRouter>\n        <Main />\n      </BrowserRouter>\n    )\n  }\n}\n\nexport default BooksApp\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport './index.css'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}